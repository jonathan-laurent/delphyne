[project]
name = "delphyne"
version = "0.13.0"
description = ""
authors = [{name="Jonathan Laurent", email="jonathan.laurent@cs.cmu.edu"}]
readme = "README.md"

# Python >=3.12 is required for PEP 695 generics.
# Python >=3.13 is not supported due to an unresolved typing issue:
# https://discuss.python.org/t/make-replace-stop-interfering-with-variance-inference/96092
requires-python = ">=3.12,<3.13"

dependencies = [
    "fastapi>=0.111",  # to implement the delphyne language server
    "Jinja2>=3.1",  # for rendering prompt templates
    "numpy>=2.0",  # e.g., for performing operations on probability vectors
    "openai>=1.99",  # for accessing openai-compatible LLM APIs
    "parsy>=2.1",  # for parsing test commands
    "pyyaml>=6.0",  # standard `yaml` module
    "pydantic>=2.8",
    "pytest>=8.2",
    "setuptools>=80.0",
    "uvicorn>=0.30",  # to implement the delphyne language server
    "fire>=0.7.0",  # e.g., to implement the delphyne CLI
    "pandas>=2.3.2", # to produce summary files in the experiment launcher
]

[project.optional-dependencies]
dev = [
    "pyright",
    "ruff",
    "pytest",
    "mkdocs",
    "mkdocstrings-python>=1.18.2",
    "mkdocs-autolinks-plugin",
    "mkdocs-material",
    "mike"
]

# Install the `delphyne` CLI
[project.scripts]
delphyne = "delphyne.__main__:main"

# Use setuptools for packaging
# setuptools-scm uses git information to
# automatically include package data.
[build-system]
requires = ["setuptools>=80", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

# We do not use black since it does not handle PEP 695
# type parameters very well yet.
# [tool.isort]
# profile = "black"
# line_length = 79
# lines_after_imports = 2
# [tool.black]
# line-length = 79

# Formatting with ruff
[tool.ruff]
line-length = 79

# Currently tested with pyright==1.1.406
[tool.pyright]
typeCheckingMode = "strict"
include = ["src/**", "tests/**"]